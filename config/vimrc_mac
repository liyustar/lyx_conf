set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" https://github.com/gmarik/Vundle.vim.git
Plugin 'VundleVim/Vundle.vim'

" Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" " Bundle 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
" " Bundle 'davidhalter/jedi-vim'
" " Bundle 'klen/python-mode'
" " Bundle 'winmanager'
" " Bundle 'Valloric/YouCompleteMe'
" " Bundle 'plasticboy/vim-markdown'
" " Bundle 'SirVer/ultisnips'
" Bundle 'majutsushi/tagbar'
Plugin 'fholgado/minibufexpl.vim'
" Bundle 'scrooloose/nerdcommenter'
" Bundle 'godlygeek/tabular'
" 
" Bundle 'cscope.vim'
" Bundle 'taglist.vim'
" Bundle 'a.vim'
" 
" " 配色方案
" Bundle 'tomasr/molokai'
" " Bundle 'altercation/vim-colors-solarized'

call vundle#end()
filetype plugin indent on

let mapleader=","

" Common setup

" 文件编码相关
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8
set fileencodings=utf-8,ucs-bom,cp936
set fileencoding=utf-8

" 实用设置
set number          " 显示行号
syntax on           " 语法高亮
set history=1000
set autoread        " 设置当文件被改动时自动载入
set autowrite       " 自动保存
set nobackup
set noswapfile
set noeb
set scrolloff=4     " 光标移动到buffer的顶部和底部时保持4行距离
set fillchars=vert:\ ,stl:\ ,stlnc:\    " 在被分割的窗口间现实空白，便于

" 自动缩进
set autoindent
set cindent
set smartindent     " 为C程序提供自动缩进
set cino=N-s        " 取消namespace缩进

set tabstop=4       " Tab键的宽度
set softtabstop=4   " 统一缩进为4
set shiftwidth=4
set expandtab       " 不要用空格代替制表符
set smarttab        " 在行和段开始处使用制表符

set list
set listchars=tab:>-,trail:-

" 搜索设置
set hlsearch        " 搜索逐字符高亮
set incsearch
" set ignorecase      " 搜索忽略大小写
" set showmatch       " 高亮现实匹配的括号
" set matchtime=1     " 匹配括号高亮的时间（单位是十分之一秒）
set iskeyword+=_

" Tmux设置
if exists('$TMUX')
    set term=screen-256color
endif

" augroup vimrc_autocmds
"     autocmd!
"     autocmd FileType python highlight Excess ctermbg=DarkGrey guibg=Black
"     autocmd FileType python match Excess /\%120v.*/
"     autocmd FileType python set nowrap
"     " autocmd FileType h,cpp,cc,c highlight Excess ctermbg=DarkGrey guibg=Black
"     " autocmd FileType h,cpp,cc,c match Excess /\%120v.*/
"     " autocmd FileType h,cpp,cc,c set nowrap
" augroup END
" 
" " 自定义快捷键
" nmap <leader>n :cn<CR>
" nmap <leader>p :cp<CR>

" Powerline setup
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 9
set laststatus=2
" set cmdheight=2     " 命令行（在状态行下）的高度，默认为1，这里是2

" NERDTree setup
map <C-@> :NERDTreeToggle<CR>

" " YouCompleteMe setup
" let g:ycm_confirm_extra_conf = 0
" " let g:ycm_error_symbol = '>>'
" " let g:ycm_warning_symbol = '>*'
" nnoremap <leader>gl :YcmCompleter GoToDeclaration<CR>
" nnoremap <leader>gf :YcmCompleter GoToDefinition<CR>
" nnoremap <leader>gg :YcmCompleter GoToDefinitionElseDeclaration<CR>
" nmap <leader>dd :YcmDiags<CR>
" let g:ycm_key_list_select_completion = ['<C-N>', '<Down>']
" 
" " ultisnips setup
" " Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
" let g:UltiSnipsExpandTrigger="<C-C>"
" let g:UltiSnipsJumpForwardTrigger="<C-B>"
" let g:UltiSnipsJumpBackwardTrigger="<C-Z>"
" " let g:UltiSnipsSnippetDirectories=["snippets", "bundle/ultisnips/UltiSnips"]
" 
" " If you want :UltiSnipsEdit to split your window.
" let g:UltiSnipsEditSplit="vertical"
" 
" 
" " jedi-vim setup
" let g:jedi#popup_select_first = 0
" let g:jedi#completions_command = "<C-N>"
" 
" " Python-mode setup
" " Activate rope
" " Keys:
" " K             Show python docs
" " <Ctrl-Space>  Rope autocomplete
" " <Ctrl-c>g     Rope goto definition
" " <Ctrl-c>d     Rope show documentation
" " <Ctrl-c>f     Rope find occurrences
" " <Leader>b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" " [[            Jump on previous class or function (normal, visual, operator modes)
" " ]]            Jump on next class or function (normal, visual, operator modes)
" " [M            Jump on previous class or method (normal, visual, operator modes)
" " ]M            Jump on next class or method (normal, visual, operator modes)
" let g:pymode_rope = 1
" 
" " Documentation
" let g:pymode_doc = 1
" let g:pymode_doc_key = 'K'
" 
" "Linting
" let g:pymode_lint = 1
" let g:pymode_lint_checker = "pyflakes,pep8"
" " Auto check on save
" let g:pymode_lint_write = 1
" 
" " Support virtualenv
" let g:pymode_virtualenv = 1
" 
" " Enable breakpoints plugin
" let g:pymode_breakpoint = 1
" let g:pymode_breakpoint_key = '<leader>b'
" 
" " syntax highlighting
" let g:pymode_syntax = 1
" let g:pymode_syntax_all = 1
" let g:pymode_syntax_indent_errors = g:pymode_syntax_all
" let g:pymode_syntax_space_errors = g:pymode_syntax_all
" 
" " Don't autofold code
" let g:pymode_folding = 0
" 
" " Tlist setup
" " let Tlist_Sort_Type = "name"        " 按照名称排序 "name" or "order"
" let Tlist_Use_Right_Window = 1      " 在右侧显示窗口
" let Tlist_Compart_Format = 1        " 压缩方式
" let Tlist_Exit_OnlyWindow = 1       " 如果只有一个buffer，kill窗口也kill掉buffer
" let Tlist_File_Fold_Auto_Close = 0  " 不要关闭其他文件的tags
" let Tlist_Enable_Fold_Column = 0    " 不要显示折叠树
" " let Tlist_Show_One_File=1           " 不同时显示多个文件的tag，只显示当前文件的
" " let Tlist_Auto_Open=1               " 默认打开Taglist
" 
" " tabular setup
" " \bb 按=号对齐代码 [Tabular插件]
" nmap <leader>bb :Tabularize /=<CR>
" " \bn 自定义对齐    [Tabular插件]
" nmap <leader>bn :Tabularize /
" 
" " NERDCommenter setup
" let NERDSpaceDelims = 1
" let NERDRemoveExtraSpaces = 1
" 
" " tagbar setup
" nmap <leader>tb :TagbarToggle<CR>
" let g:tagbar_autofocus = 1
" 
" " colorscheme setup
" let g:molokai_original = 1
" let g:rehash256 = 1
" set background=dark " dark or light
" set t_Co=256
" " colorscheme solarized
" colorscheme molokai
